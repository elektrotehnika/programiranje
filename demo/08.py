# Самореференцирање

def print_сви(k):
    """Исписује све аргументе у поновљеним позивима.

    >>> f = print_сви(1)(2)(3)(4)(5)
    1
    2
    3
    4
    5
    """
    print(k)
    return print_сви

def print_збирови(n):
    """Исписује све збирове аргумената у поновљеним позивима.

    >>> f = print_збирови(1)(2)(3)(4)(5)
    1
    3
    6
    10
    15
    """
    print(n)
    def следећи_збир(k):
        return print_збирови(n+k)
    return следећи_збир

# Збир цифара

def раздвој(n):
    """Раздваја природан број на део без последње цифре и последњу цифру."""
    return n // 10, n % 10

def збир_цифара(n):
    """Враћа збир цифара природног броја n.

    >>> збир_цифара(7)
    7
    >>> збир_цифара(18117)
    18
    >>> збир_цифара(9437184)
    36
    >>> збир_цифара(11408855402054064613470328848384)
    126
    """
    if n < 10:
        return n
    else:
        све_сем_последње, последња = раздвој(n)
        return збир_цифара(све_сем_последње) + последња

# Итерација и рекурзија

def факт_итер(n):
    производ, k = 1, 1
    while k <= n:
        производ, k = производ * k, k + 1
    return производ

def факт(n):
    if n == 0:
        return 1
    else:
        return n * факт (n-1)

# Лунов алгоритам: међусобна рекурзија

def лунов_збир(n):
    """Враћа збир цифара од n израчунат по Луновом алгоритму.

    >>> лунов_збир(2)
    2
    >>> лунов_збир(12)
    4
    >>> лунов_збир(42)
    10
    >>> лунов_збир(138743)
    30
    >>> лунов_збир(5105105105105100) # пример Mastercard
    20
    >>> лунов_збир(4012888888881881) # пример Visa
    90
    >>> лунов_збир(79927398713) # са Википедије
    70
    """
    if n < 10:
        return n
    else:
        све_сем_последње, последња = раздвој(n)
        return лунов_дупли_збир(све_сем_последње) + последња

def лунов_дупли_збир(n):
    """Враћа Лунов збир од n, дуплирајући последњу цифру."""
    све_сем_последње, последња = раздвој(n)
    лунова_цифра = збир_цифара(2 * последња)
    if n < 10:
        return лунова_цифра
    else:
        return лунов_збир(све_сем_последње) + лунова_цифра

# Претварање итерације у рекурзију

def збир_цифара_итер(n):
    """Сабира цифре итеративно.

    >>> збир_цифара_итер(11408855402054064613470328848384)
    126
    """
    збир_цифара = 0
    while n > 0:
        n, последња = раздвој(n)
        збир_цифара = збир_цифара + последња
    return збир_цифара

def збир_цифара_рек(n, збир_цифара):
    """Сабира цифре користећи рекурзију, на основу итеративне верзије.

    >>> збир_цифара_рек(11408855402054064613470328848384, 0)
    126
    """
    if n == 0:
        return збир_цифара
    else:
        n, последња = раздвој(n)
        return збир_цифара_рек(n, збир_цифара + последња)
