def плус_минус(x):
    """Допринос x и -x.

    >>> т = плус_минус(3)
    >>> next(т)
    3
    >>> next(т)
    -3
    >>> list(плус_минус(5))
    [5, -5]
    >>> list(map(abs, плус_минус(7)))
    [7, 7]
    """
    yield x
    yield -x

def парни(почетак, крај):
    """Генератор који враћа парне бројеве.

    >>> list(парни(2, 10))
    [2, 4, 6, 8]
    >>> list(парни(1, 10))
    [2, 4, 6, 8]
    """
    паран = почетак + (почетак % 2)
    while паран < крај:
        yield паран
        паран += 2

def а_па_б_for(а, б):
    """Чланови из а праћени чановима из б.

    >>> list(а_па_б_for([3, 4], [5, 6]))
    [3, 4, 5, 6]
    """
    for x in а:
        yield x
    for x in б:
        yield x

def а_па_б(а, б):
    """Чланови из а праћени чановима из б.

    >>> list(а_па_б([3, 4], [5, 6]))
    [3, 4, 5, 6]
    """
    yield from а
    yield from б

def одбројевање_for(k):
    """Одбројавање до нуле.

    >>> list(одбројевање_for(5))
    [5, 4, 3, 2, 1]
    """
    if k > 0:
        yield k
        for x in одбројевање(k-1):
            yield x

def одбројевање(k):
    """Одбројавање до нуле.

    >>> list(одбројевање(5))
    [5, 4, 3, 2, 1]
    """
    if k > 0:
        yield k
        yield from одбројевање(k-1)

def префикси(с):
    """Доприноси све префиксе од с.

    >>> list(префикси('југодрво'))
    ['ј', 'ју', 'југ', 'југо', 'југод', 'југодр', 'југодрв', 'југодрво']
    """
    if с:
        yield from префикси(с[:-1])
        yield с

def суфикси(с):
    """Доприноси све суфиксе од с.

    >>> list(суфикси('југодрво'))
    ['југодрво', 'угодрво', 'годрво', 'одрво', 'дрво', 'рво', 'во', 'о']
    """
    if с:
        yield с
        yield from суфикси(с[1:])

def подниске(с):
    """Доприноси све подниске од с.

    >>> list(подниске('ниска'))
    ['н', 'ни', 'нис', 'ниск', 'ниска', 'и', 'ис', 'иск', 'иска', 'с', 'ск', 'ска', 'к', 'ка', 'а']
    """
    if с:
        yield from префикси(с)
        yield from подниске(с[1:])

# Партиције

def број_партиција(n, m):
    """Броји партиције.

    >>> број_партиција(6, 4)
    9
    """
    if n == 0:
        return 1
    elif n < 0:
        return 0
    elif m == 0:
        return 0
    else:
        са_m = број_партиција(n-m, m)
        без_m = број_партиција(n, m-1)
        return са_m + без_m

def број_партиција(n, m):
    """Броји партиције.

    >>> број_партиција(6, 4)
    9
    """
    if n <= 0:
        return 0
    elif m == 0:
        return 0
    else:
        подједнако = 0
        if n == m:
            подједнако = 1
        са_m = број_партиција(n-m, m)
        без_m = број_партиција(n, m-1)
        return подједнако + са_m + без_m

def партиције(n, m):
    """Списак партиција.

    >>> for п in партиције(6, 4): print(п)
    2 + 4
    1 + 1 + 4
    3 + 3
    1 + 2 + 3
    1 + 1 + 1 + 3
    2 + 2 + 2
    1 + 1 + 2 + 2
    1 + 1 + 1 + 1 + 2
    1 + 1 + 1 + 1 + 1 + 1
    """
    if n <= 0:
        return []
    elif m == 0:
        return []
    else:
        подједнако = []
        if n == m:
            подједнако = [str(m)]
        са_m = [п + ' + ' + str(m) for п in партиције(n-m, m)]
        без_m = партиције(n, m-1)
        return подједнако + са_m + без_m

def партиције_генератор(n, m):
    """Доприноси партиције.

    >>> for п in партиције_генератор(6, 4): print(п)
    2 + 4
    1 + 1 + 4
    3 + 3
    1 + 2 + 3
    1 + 1 + 1 + 3
    2 + 2 + 2
    1 + 1 + 2 + 2
    1 + 1 + 1 + 1 + 2
    1 + 1 + 1 + 1 + 1 + 1
    """
    if n > 0 and m > 0:
        if n == m:
            yield str(m)
        for п in партиције_генератор(n-m, m):
            yield п + ' + ' + str(m)
        yield from партиције_генератор(n, m-1)
