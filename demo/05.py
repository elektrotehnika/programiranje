# Функционални аргументи

def примениДвапут(f, x):
    """Враћа f(f(x))

    >>> примениДвапут(квадрат, 2)
    16
    >>> from math import sqrt
    >>> примениДвапут(sqrt, 16)
    2.0
    """
    return f(f(x))
    
def квадрат(x):
    return x * x

резултат = примениДвапут(квадрат, 2)

# Функционалне повратне вредности

def направиСабирач(n):
    """Враћа функцију која прима један аргумент k и враћа k + n.

    >>> додајТри = направиСабирач(3)
    >>> додајТри(4)
    7
    """
    def сабирач(k):
        return k + n
    return сабирач

# Лексичка област видљивости и повратне функције

def f(x, y):
    return g(x)

def g(a):
    return a + y

# Следећи израз доводи до грешке јер y није дефинисано унутар g функције.
# f(1, 2)

# Композиција

def композиција1(f, g):
    """Враћа функцију која саставља f и g.

    f, g -- функције једног аргумента
    """
    def h(x):
        return f(g(x))
    return h

def трострук(x):
    return 3 * x

квострук = композиција1(квадрат, трострук)
тродрат = композиција1(трострук, квадрат)
квадрирач = композиција1(квадрат, направиСабирач(2))

# Ламбда изрази

x = 10
квадрат = x * x
квадрат = lambda x: x * x
квадрат(4)

# Каринг

from operator import add, mul

#каринг2 = lambda f: lambda x: lambda y: f(x, y)
def каринг2(f):
    """Враћа каринговану варијанту задате функције два аргумента.

    >>> m = каринг2(add)
    >>> додајТри = m(3)
    >>> додајТри(4)
    7
    >>> додајТри(2020)
    2023
    >>> m(2)(1)
    3
    """
    def g(x):
        def h(y):
            return f(x, y)
        return h
    return g
